@use "sass:math";

$grid_columns: 12;
$grid_gap:(
    '0':0,
    '1':10px,
    '2':20px,
    '3':30px,
    '4':40px,
    '5':50px,
);
$layout_values: flex-start , flex-end , center , space-between , space-around , space-evenly;

//base layout layer
.container{
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}
.row {
  display: flex;
  flex-flow: row wrap;
}
//grid-gaps
@each $key, $value in $grid_gap {
    .gap_#{$key} > *{
        padding: $value ;
    }
    .gap_#{$key} {
        margin-left: -$value ;
        margin-right : -$value ;
    }
}
//justify content class
@each $value in $layout_values {
    .justify_#{$value}{
        justify-content: $value;
    }
}
  
//column classes
@include xs {
  @for $i from 1 through $grid_columns {
    .col_#{$i}_xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid_columns);
    }
  }
}
@include sm{
  @for $i from 1 through $grid_columns {
    .col_#{$i}_sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid_columns);
    }
  }
}
@include md {
  @for $i from 1 through $grid_columns {
    .col_#{$i}_md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid_columns);
    }
  }
}
@include lg{
  @for $i from 1 through $grid_columns {
    .col_#{$i}_lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid_columns);
    }
  }
}
@include xl {
  @for $i from 1 through $grid_columns {
    .col_#{$i}_xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid_columns);
    }
  }
}
